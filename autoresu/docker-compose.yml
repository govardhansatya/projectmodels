version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: ai-resume-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: airesume
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ai-resume-network

  redis:
    image: redis:7.2-alpine
    container_name: ai-resume-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-resume-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-resume-backend
    restart: always
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/airesume?authSource=admin
      - REDIS_URL=redis://redis:6379
      - DATABASE_NAME=airesume
      - SECRET_KEY=your-super-secret-key-change-in-production
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
    networks:
      - ai-resume-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-resume-frontend
    restart: always
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - ai-resume-network

  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-resume-celery-worker
    restart: always
    command: celery -A app.celery_app worker --loglevel=info
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/airesume?authSource=admin
      - REDIS_URL=redis://redis:6379
      - DATABASE_NAME=airesume
      - SECRET_KEY=your-super-secret-key-change-in-production
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME}
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
    networks:
      - ai-resume-network

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-resume-celery-beat
    restart: always
    command: celery -A app.celery_app beat --loglevel=info
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/airesume?authSource=admin
      - REDIS_URL=redis://redis:6379
      - DATABASE_NAME=airesume
      - SECRET_KEY=your-super-secret-key-change-in-production
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
    networks:
      - ai-resume-network

  flower:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-resume-flower
    restart: always
    command: celery -A app.celery_app flower --port=5555
    environment:
      - REDIS_URL=redis://redis:6379
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - ai-resume-network

volumes:
  mongodb_data:
  redis_data:
  uploads:

networks:
  ai-resume-network:
    driver: bridge
